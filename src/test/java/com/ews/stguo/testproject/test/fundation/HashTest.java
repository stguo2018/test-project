package com.ews.stguo.testproject.test.fundation;

import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @author <a href="mailto:v-stguo@expedia.com">steven</a>
 */
public class HashTest {

    @Test
    public void test01() {
        Map<Integer, List<Integer>> indexMaps = new HashMap<>();
        int[] hotelIds = {66471153,66471085,66470997,66470977,66470875,66470861,66470793,66470627,66470619,66470617,
                66470615,66470477,66470469,66470467,66470303,66470001,66469987,66469981,66469977,66469973,66469923,
                66469915,66469871,66469831,66469677,66469071,66468141,66467839,66466877,66466771,66465577,66463153,
                66463151,66463099,66463091,66463085,66463083,66463081,66463077,66463071,66461845,66461523,66461521,
                66461373,66461337,66461185,66461155,66460749,66460727,66460667,66460487,66458747,66458091,66458033,
                66457949,66457567,66457177,66457153,66457151,66457149,66457147,66457145,66457133,66457099,66456987,
                66456743,66456035,66455797,66455711,66455025,66454871,66454239,66453217,66452427,66452371,66452217,
                66452215,66452209,66452047,66452045,66452041,66452025,66451767,66451131,66450725,66450105,66450065,
                66450061,66449961,66449439,66449359,66449195,66449183,66449155,66449149,66449137,66449039,66449033,
                66449031,66449011,66449003,66448987,66448913,66448851,66448831,66448809,66448807,66448797,66448783,
                66448623,66448339,66448327,66448289,66448285,66448247,66448181,66448109,66448059,66447997,66447941,
                66447889,66447887,66447881,66447853,66447851,66447849,66447825,66447801,66447795,66447785,66447783,
                66447729,66447143,66447097,66446873,66446749,66446743,66446725,66446723,66446673,66446671,66446655,
                66446647,66446583,66446515,66446509,66446505,66446497,66446491,66446489,66446483,66446469,66446367,
                66446291,66446219,66446185,66446153,66446121,66445591,66445585,66445393,66445311,66445257,66444895,
                66444863,66444861,66444859,66444855,66444851,66444849,66444847,66444519,66444361,66444259,66444169,
                66444115,66443885,66443837,66443773,66443767,66443763,66443759,66443755,66443753,66443751,66443745,
                66443707,66443687,66443681,66442863,66442649,66442611,66442351,66442333,66442331,66441885,66441617,
                66441615,66441577,66441229,66441177,66438933,66438509,66429867,66427801,66426283,66426203,66426061,
                66426043};
        for (int hotelId : hotelIds) {
            int index = calculateTableIndex(100, hotelId);
            List<Integer> list = indexMaps.computeIfAbsent(index, k -> new ArrayList<>());
            list.add(hotelId);
        }
        indexMaps.forEach((k, v) -> System.out.println("k:" + k + ",v size:" + v.size()));
    }

    private int calculateTableIndex(int tableNumber, Integer hotelId) {
        int h;
        return (tableNumber - 1) & ((h = String.valueOf(hotelId).hashCode()) ^ (h >>> 16));
    }

}
